prettyNum(x, digits = n)
}
rec_data <- rec_data %>% sapply(str_split, ',')
View(rec_data)
rec_data <- rec_data %>% sapply(str_split, ',') %>% as.data.frame()
View(rec_data)
rec_data <- rec_data %>% sapply(str_split, ',', axis = 1) %>% as.data.frame()
rec_data <- rec_data %>% sapply(str_split, ',')
View(rec_data)
rec_data <- rec_data %>% lapply(str_split, ',')
View(rec_data)
View(rec_data)
View(basket)
rec_data <- rec_data %>% apply(str_split, ',')
?apply
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% apply(2, str_split, ',')
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(2, str_split, ',')
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(2, str_split, ',') %>% as.data.frame()
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',') %>% as.data.frame()
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
View(rec_data)
rec_data <- rec_data %>% lapply(function(x){x != ''})
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[x != '']})
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(str_remove_empty)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE, error=FALSE)
library(ggplot2)
library(caret)
library(doParallel)
library(kernlab)
library(gbm)
library(mlbench)
library(Cubist)
library(party)
library(ggparty)
library(data.table)
library(arules)
library(dplyr)
library(stringr)
library(stringi)
cl <- parallel::makePSOCKcluster((parallel::detectCores() * 0.75))
registerDoParallel(cl)
pN <- function(x, n) {
prettyNum(x, digits = n)
}
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(str_remove_empty)
library(stringi)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(str_remove_empty)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(stri_remove_empty)
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% apply(1, stri_remove_empty)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% apply(2, stri_remove_empty)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[x != ' ']})
View(rec_data)
rec_data[1][5]
rec_data[1][4]
rec_data[1][3]
View(rec_data)
rec_data[[1]]
rec_data[[1]][3]
rec_data[[1]][[3]]
rec_data[[1]][3]
rec_data[[1]][rec_data[[1]] != ""]
rec_data[[1]][5]
rec_data[[1]][1]
rec_data[[1]][1][5]
rec+data[[1]][1][1]
rec_data[[1]][1][1]
rec_data[[1]][1][1][1][1][1]
rec_data[[1]][[1]]
rec_data[[1]][[1]][1]
rec_data[[1]][[1]][5]
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2, maxlen = 4)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = T)
inspect(rules_by_lift[1:20,])
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2, maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = T)
inspect(rules_by_lift[1:10,])
inspect(rules_by_lift[1:10,])
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .4, minlen = 2, maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = T)
inspect(rules_by_lift[1:10,])
inspect(rules_by_lift[1:10,])
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2, maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = T)
knitr::kable(rules_by_lift[1:10,], format = 'pandoc', digits = 3L)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2, maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = T)
knitr::kable(inspect(rules_by_lift[1:10,]) %>% as.data.frame(), format = 'pandoc', digits = 3L)
inspect(rules_by_lift[1:10,]) %>% as.data.frame()
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2, maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = T)
knitr::kable(as(rules_by_lift[1:10,], 'data.frame'), format = 'pandoc', digits = 3L)
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
View(inc)
inc %>% ggplot(aes(x = State)) + geom_bar(stat = 'count') + coord_flip()
library(ggplot)
library(ggplot2)
library(dplyr)
inc %>% ggplot(aes(x = State)) + geom_bar(stat = 'count') + coord_flip()
library(ggplot2)
library(dplyr)
inc %>% ggplot(aes(x = State)) + geom_bar(stat = 'count', position = position_dodge(width = 0.5)) + coord_flip()
library(ggplot2)
library(dplyr)
inc %>% ggplot(aes(x = State)) + geom_bar(stat = 'count', position = position_dodge(width = 1)) + coord_flip()
class(inc$State)
inc %>% ggplot(aes(x = reorder(State, State, function(x)-length(x)))) + geom_bar(stat = 'count', position = position_dodge(width = 0.5)) + coord_flip()
library(ggplot2)
library(dplyr)
inc %>% ggplot(aes(x = reorder(State, -State, function(x)-length(x)))) + geom_bar(stat = 'count', position = position_dodge(width = 0.5)) + coord_flip()
library(ggplot2)
library(dplyr)
inc %>% ggplot(aes(x = reorder(State, State, -function(x)-length(x)))) + geom_bar(stat = 'count', position = position_dodge(width = 0.5)) + coord_flip()
library(ggplot2)
library(dplyr)
inc %>% ggplot(aes(x = reorder(State, State, function(x)+length(x)))) + geom_bar(stat = 'count', position = position_dodge(width = 0.5)) + coord_flip()
?complete.cases
ny_data <- inc %>% filter(complete.cases(inc)) %>% filter(State == 'NY')
View(ny_data)
ny_data <- inc %>% filter(complete.cases(inc)) %>% filter(State == 'NY') %>% filter(Employees <= 5000)
# Answer Question 2 here
ny_data %>% ggplot(aes(x = Industry, y = Employees)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90))
ny_data <- inc %>% filter(complete.cases(inc)) %>% filter(State == 'NY')
ny_data_no_outliers <- ny_data %>% filter(Employees <= 2000)
# Answer Question 2 here
ny_data_no_outliers %>% ggplot(aes(x = Industry, y = Employees)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90)) + ggtitle('Median Employee Count by Industry', subtitle = 'Companies with under 2000 Employees')
ny_data <- ny_data %>% mutate(rev_per_employee = Revenue/Employees)
# Answer Question 3 here
ny_data %>% ggplot(aes(x = Industry, y = rev_per_employee)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90)) + ggtitle('Median Employee Count by Industry', subtitle = 'Companies with under 2000 Employees')
View(ny_data)
knitr::opts_chunk$set(echo = TRUE)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
library(dplyr)
library(arules)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
library(dplyr)
library(arules)
library(stringr)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2,
maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2,
maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
View(rec_data)
View(rec_data)
View(rules_by_lift)
library(stringi)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2,
maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
View(rec_data)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 2,
maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
rules_by_lift
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
knitr::kable(as(rules_by_lift[1:10,], 'data.frame'), format = 'pandoc', digits = 3L)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 1,
maxlen = 5)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
knitr::kable(as(rules_by_lift[1:10,], 'data.frame'), format = 'pandoc', digits = 3L)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 1,
maxlen = 1)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
knitr::kable(as(rules_by_lift[1:10,], 'data.frame'), format = 'pandoc', digits = 3L)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .5, minlen = 1,
maxlen = 2)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
knitr::kable(as(rules_by_lift[1:10,], 'data.frame'), format = 'pandoc', digits = 3L)
rec_data <- read.csv('GroceryDataSet.csv', header = FALSE, sep = ';')
rec_data <- rec_data %>% apply(1, str_split, ',')
rec_data <- rec_data %>% lapply(function(x){x[[1]][x[[1]] != '']})
basket <- as(rec_data, "transactions")
params <- new("APparameter", support = 0.001, confidence = .3, minlen = 1,
maxlen = 2)
assoc_rules <- apriori(basket, parameter = params)
rules_by_lift <- sort(assoc_rules, by = 'lift', decreasing = TRUE)
knitr::kable(as(rules_by_lift[1:10,], 'data.frame'), format = 'pandoc', digits = 3L)
View(rec_data)
View(rec_data)
?Filter
n_herbs <- length(Filter(function(x){'herbs' %in% x}, rec_data))
n_not_herbs <- length(Filter(function(x){'herbs' !%in% x}, rec_data))
n_not_herbs <- length(Filter(function(x){!('herbs' %in% x}, rec_data)))
n_not_herbs <- length(Filter(function(x){!('herbs' %in% x)}, rec_data))
herbs_vegs <- length(Filter(function(x){('herbs' %in% x) & ('root vegetables' %in% x)}, rec_data))
nherbs_vegs <- length(Filter(function(x){!('herbs' %in% x) & ('root vegetables' %in% x)}, rec_data))
herbs_vegs <- length(Filter(function(x){('herbs' %in% x) & ('root vegetables' %in% x)}, rec_data))
nherbs_vegs <- length(Filter(function(x){!('herbs' %in% x) & ('root vegetables' %in% x)}, rec_data))
herbs_nvegs <- length(Filter(function(x){('herbs' %in% x) & !('root vegetables' %in% x)}, rec_data))
nherbs_nvegs <- length(Filter(function(x){!('herbs' %in% x) & !('root vegetables' %in% x)}, rec_data))
herbs_vegs <- length(Filter(function(x){('herbs' %in% x) & ('root vegetables' %in% x)}, rec_data))
nherbs_vegs <- length(Filter(function(x){!('herbs' %in% x) & ('root vegetables' %in% x)}, rec_data))
herbs_nvegs <- length(Filter(function(x){('herbs' %in% x) & !('root vegetables' %in% x)}, rec_data))
nherbs_nvegs <- length(Filter(function(x){!('herbs' %in% x) & !('root vegetables' %in% x)}, rec_data))
herbs <- c(herbs_vegs, herbs_nvegs)
n_herbs <- c(nherbs_vegs, nherbs_nvegs)
count_df <- data.frame(herbs, n_herbs)
View(count_df)
chisq_results <- chisq.test(count_df)
chisq_results
round(chisq$expected, 2)
round(chisq_results$expected, 2)
round(chisq_results$expected, 2)
count_df
?data.frame
library(dplyr)
library(rvest)
knitr::opts_chunk$set(echo = TRUE)
url <- 'https://en.wikipedia.org/wiki/Nationwide_opinion_polling_for_the_2012_United_States_presidential_election#Two-way_race'
xpath <- '//*[@id="mw-content-text"]/div[1]/table[2]'
table <- url %>% read_html() %>% html_nodes(xpath = xpath) %>% html_table(fill = T)
View(table)
table <- table[[1]]
View(table)
table <- table[2:,]
table <- table[2:,:]
table <- table[2:nrow(table),:]
table <- table[2:nrow(table),]
url <- 'https://en.wikipedia.org/wiki/Nationwide_opinion_polling_for_the_2012_United_States_presidential_election#Two-way_race'
xpath <- '//*[@id="mw-content-text"]/div[1]/table[2]'
table <- url %>% read_html() %>% html_nodes(xpath = xpath) %>% html_table(fill = T)
table <- table[[1]]
table <- table[2:nrow(table),]
knitr::kable(table)
View(table)
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
View(table)
library(dplyr)
library(rvest)
library(stringr)
knitr::opts_chunk$set(echo = TRUE)
table <- table %>% str_replace_all('%', '') %>% str_replace_all('±', '')
table <- table %>% str_replace_all('%', '') %>% str_replace_all('±', '') %>% as.data.frame()
View(table)
url <- 'https://en.wikipedia.org/wiki/Nationwide_opinion_polling_for_the_2012_United_States_presidential_election#Two-way_race'
xpath <- '//*[@id="mw-content-text"]/div[1]/table[2]'
table <- url %>% read_html() %>% html_nodes(xpath = xpath) %>% html_table(fill = T)
table <- table[[1]]
table <- table[2:nrow(table),]
knitr::kable(table)
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
table <- table %>% sapply(str_replace_all('%', '')) %>% sapply(str_replace_all('±', '')) %>% as.data.frame()
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
table <- table %>% sapply(str_replace_all, '%', '') %>% sapply(str_replace_all, '%', '') %>% as.data.frame()
table
View(table)
table <- table %>% sapply(str_replace_all, '%', '') %>% sapply(str_replace_all, '%', '')
url <- 'https://en.wikipedia.org/wiki/Nationwide_opinion_polling_for_the_2012_United_States_presidential_election#Two-way_race'
xpath <- '//*[@id="mw-content-text"]/div[1]/table[2]'
table <- url %>% read_html() %>% html_nodes(xpath = xpath) %>% html_table(fill = T)
table <- table[[1]]
table <- table[2:nrow(table),]
knitr::kable(table)
clean_table <- table %>% apply(str_replace_all, '%', '') %>% apply(str_replace_all, '%', '')
?apply
clean_table <- table %>% apply(str_replace_all, 1, '%', '') %>% apply(str_replace_all, 1, '%', '')
clean_table <- table %>% apply(str_replace_all, margin = 2, '%', '') %>% apply(str_replace_all, margin = 2, '%', '')
clean_table <- table %>% apply(margin = 2, str_replace_all, '%', '') %>% apply(margin = 2, str_replace_all, '%', '')
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '%', '')
View(table)
View(clean_table)
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(?)', '') %>% apply(2, str_replace_all), ',' , '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(?)', '') %>% apply(2, str_replace_all, ',', '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') #%>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(?)', '') %>% apply(2, str_replace_all, ',', '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') #%>% apply(2, str_replace_all, '(?)', '') %>% apply(2, str_replace_all, ',', '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(?)', '') #%>% apply(2, str_replace_all, ',', '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(//?)', '') #%>% apply(2, str_replace_all, ',', '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(//?)', '') %>% apply(2, str_replace_all, ',', '') %>% as.data.frame()
View(clean_table)
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(//?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(//?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_trim) as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(//?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_trim) %>% as.data.frame()
View(clean_table)
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(\\?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_trim) %>% as.data.frame()
clean_table <- table %>% apply(2, str_replace_all, '%', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(\\?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_replace_all, 'adults', '') %>% apply(2, str_trim) %>% as.data.frame()
View(clean_table)
clean_table[3:ncol(table)] <- table %>% apply(2, str_replace_all, '[^0-9\\.]', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(\\?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_replace_all, 'adults', '') %>% apply(2, str_trim) %>% as.data.frame()
View(clean_table)
clean_table[3:ncol(table)] <- table %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(\\?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_replace_all, 'adults', '') %>% apply(2, str_trim) %>% as.data.frame()
View(clean_table)
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% apply(2, str_replace_all, '±', '') %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, 'LV', '') %>% apply(2, str_replace_all, '(\\?)', '') %>% apply(2, str_replace_all, ',', '') %>% apply(2, str_replace_all, '≤', '') %>% apply(2, str_replace_all, 'RV', '') %>% apply(2, str_replace_all, 'adults', '') %>% apply(2, str_trim) %>% as.data.frame()
View(clean_table)
View(table)
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '')
View(clean_table)
?mutate_at
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate_at(Obama = Obama/100) %>% mutate_at(Romney = Romney/100)
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate(Obama_prop = Obama/100) %>% mutate(Romney_prop = Romney/100)
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate(Obama_prop = Obama/100) %>% mutate(Romney_prop = Romney/100)
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate(Obama_prop = as.numeric(Obama)/100) %>% mutate(Romney_prop = as.numeric(Romney)/100)
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate(Obama_prop = as.numeric(as.character(Obama))/100) %>% mutate(Romney_prop = as.numeric(as.character(Romney))/100)
View(clean_table)
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
names(table)[6] <- 'Sample_Size'
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate(Obama_prop = as.numeric(as.character(Obama))/100) %>% mutate(Romney_prop = as.numeric(as.character(Romney))/100) %>% mutate(Obama_num = Obama_prop * Sample_Size) %>% mutate(Romney_num = Romney_prop * Sample_Size)
names(table)[3] <- 'Obama'
names(table)[4] <- 'Romney'
names(table)[6] <- 'Sample_Size'
clean_table <- table[3:ncol(table)] %>% apply(2, str_replace_all, 'Tie', '0') %>% apply(2, str_replace_all, '[^(0-9\\.)]', '') %>% as.data.frame() %>% mutate(Obama_prop = as.numeric(as.character(Obama))/100) %>% mutate(Romney_prop = as.numeric(as.character(Romney))/100) %>% mutate(Obama_num = Obama_prop * as.numeric(as.character(Sample_Size))) %>% mutate(Romney_num = Romney_prop * as.numeric(as.character(Sample_Size)))
obama_voters = sum(clean_table$Obama_num)
romney_voters = sum(clean_table$Romney_num)
total_voters = sum(clean_table$Sample_Size)
clean_table$Sample_Size <- as.numeric(as.character(clean_table$Sample_Size))
obama_voters = sum(clean_table$Obama_num)
romney_voters = sum(clean_table$Romney_num)
all_voters = sum(clean_table$Sample_Size)
clean_table$Sample_Size <- as.numeric(as.character(clean_table$Sample_Size))
obama_voters = sum(clean_table$Obama_num, na.rm = T)
romney_voters = sum(clean_table$Romney_num, na.rm = T)
all_voters = sum(clean_table$Sample_Size, na.rm = T)
clean_table$Sample_Size <- as.numeric(as.character(clean_table$Sample_Size))
obama_voters = round(sum(clean_table$Obama_num, na.rm = T))
romney_voters = round(sum(clean_table$Romney_num, na.rm = T))
all_voters = sum(clean_table$Sample_Size, na.rm = T)
obama_prop = obama_voters/all_voters
romney_prop = romney_voters/all_voters
print(obama_prop, romney_prop)
moe = 2 * 1.96 * sqrt(obama_prop*(1-obama_prop)/all_voters)
library(ggplot2)
library(shiny)
library(dplyr)
df <- read.table('data/cleaned-cdc-mortality-1999-2010-2.csv')
getwd()
setwd('..')
setwd('./Desktop/CUNY SPS')
getwd()
setwd('./608/CUNY_DATA_608/module3')
df <- read.table('data/cleaned-cdc-mortality-1999-2010-2.csv')
df <- read.csv('data/cleaned-cdc-mortality-1999-2010-2.csv')
View(df)
View(df)
runApp('608-week3-app.R')
library(ggplot2)
library(shiny)
library(dplyr)
df <- read.csv('data/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
# Application title
titlePanel("COVID Expansion"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput("cause_of_death",
"Cause of Death",
unique(df$ICD.Chapter)),
selectInput("year",
"Year",
unique(df$Year))
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("barPlot")
)
)
)
server <- function(input, output) {
output$barPlot <- renderPlot({
partial_df <- df %>% filter(Year = input$year) %>% filter(ICD.Chapter = input$cause_of_death)
g <- partial_df %>% ggplot(aes(x = State, y = Crude.Rate)) +
geom_bar(stat = 'identity') + xlab('State') +
ylab('Mortality Rate') + ggtitle(paste('Mortality Rate by State for', as.character(input$cause_of_death)))
print(g)
})
}
shinyApp(ui, server)
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
?summarize
runApp('608-week3-app.R')
?group_map
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
View(df)
runApp('C:/Users/Sam/Desktop/CUNY SPS/607/ProjFinal')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
View(df)
a <- df %>% filter(ICD.Chapter == 'Certain infectious and parasitic diseases') %>% filter(Year == 1999)
View(a)
sum(a$Deaths)/sum(a$Population) * 100000
print unique(df$Year)
unique(df$Year)
?data.frame
?rbind
runApp('608-week3-app.R')
runApp('608-week3-app.R')
runApp('608-week3-app.R')
